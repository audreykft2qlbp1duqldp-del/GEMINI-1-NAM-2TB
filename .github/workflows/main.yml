name: "YouTube Audio to Drive (fixed)"

on:
  workflow_dispatch: {}
  # schedule:
  #   - cron: "0 */6 * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      contents: read

    env:
      # ==== TUỲ CHỈNH NHANH ====
      SLEEP_SECONDS: "8"
      MAX_PER_RUN: "40"

      # ==== GOOGLE DRIVE ====
      GDRIVE_OAUTH_TOKEN_JSON: ${{ secrets.GDRIVE_OAUTH_TOKEN_JSON }}
      GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}

      # ==== YouTube extractor (tuỳ chọn) ====
      PO_TOKEN: ${{ secrets.PO_TOKEN }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: "Install system deps (ffmpeg)"
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: "Install latest yt-dlp from master"
        run: |
          python -m pip install --upgrade "yt-dlp @ https://github.com/yt-dlp/yt-dlp/archive/refs/heads/master.zip"
          yt-dlp --version

      - name: "Install Python deps"
        run: |
          python -m pip install --upgrade google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      - name: "Write cookies_multi.txt (optional)"
        env:
          _COOKIES: ${{ secrets.YT_COOKIES_MULTI }}
        run: |
          set -e
          mkdir -p data
          if [ -n "${_COOKIES}" ]; then
            printf '%s' "${_COOKIES}" > data/cookies_multi.txt
            echo "cookies_multi.txt created."
          else
            echo "YT_COOKIES_MULTI not set; skipping."
          fi

      - name: "Write po_token.txt (optional)"
        env:
          _POFILE: ${{ secrets.PO_TOKEN_FILE }}
        run: |
          set -e
          mkdir -p data
          if [ -n "${_POFILE}" ]; then
            printf '%s' "${_POFILE}" > data/po_token.txt
            echo "po_token.txt created."
          else
            echo "PO_TOKEN_FILE not set; skipping."
          fi

      - name: "Run - YouTube audio to Drive"
        shell: bash
        run: |
          set -euo pipefail

          # Tự dò vị trí yt_audio_to_drive.py
          SCRIPT=""
          for p in \
            "yt_audio_to_drive.py" \
            "src/yt_audio_to_drive.py" \
            "tools/yt_audio_to_drive.py" \
            ".github/scripts/yt_audio_to_drive.py"
          do
            if [ -f "$p" ]; then
              SCRIPT="$p"
              break
            fi
          done

          if [ -z "${SCRIPT:-}" ]; then
            echo "::error::Không tìm thấy yt_audio_to_drive.py ở root/src/tools/.github/scripts"
            echo "[DEBUG] Cấu trúc thư mục hiện tại:"
            ls -la
            exit 2
          fi

          echo "[INFO] Using script: $SCRIPT"

          # Đảm bảo script nhìn thấy thư mục data/ giống workflow
          SCRIPT_DIR="$(dirname "$SCRIPT")"
          mkdir -p data
          mkdir -p "$SCRIPT_DIR/data"

          # Tạo symlink (ưu tiên). Nếu symlink fail (FS không cho), sẽ copy fallback.
          if [ ! -L "$SCRIPT_DIR/data" ]; then
            ln -s "$(pwd)/data" "$SCRIPT_DIR/data" 2>/dev/null || true
          fi

          # Fallback copy nếu symlink không tạo được
          if [ ! -e "$SCRIPT_DIR/data/links.txt" ] && [ -d "data" ]; then
            cp -r -u data/* "$SCRIPT_DIR/data/" 2>/dev/null || true
          fi

          python -u "$SCRIPT"
